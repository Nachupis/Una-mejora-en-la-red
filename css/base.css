
@import url('https://fonts.googleapis.com/css?family=Barlow+Semi+Condensed:400,700|Playfair+Display:900');
article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block;}audio,canvas,video{display:inline-block;}audio:not([controls]){display:none;height:0;}[hidden]{display:none;}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;}body{margin:0;}a:focus{outline:thin dotted;}a:active,a:hover{outline:0;}h1{font-size:2em;margin:0.67em 0;}abbr[title]{border-bottom:1px dotted;}b,strong{font-weight:bold;}dfn{font-style:italic;}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0;}mark{background:#ff0;color:#000;}code,kbd,pre,samp{font-family:monospace,serif;font-size:1em;}pre{white-space:pre-wrap;}q{quotes:"\201C" "\201D" "\2018" "\2019";}small{font-size:80%;}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline;}sup{top:-0.5em;}sub{bottom:-0.25em;}img{border:0;}svg:not(:root){overflow:hidden;}figure{margin:0;}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em;}legend{border:0;padding:0;}button,input,select,textarea{font-family:inherit;font-size:100%;margin:0;}button,input{line-height:normal;}button,select{text-transform:none;}button,html input[type="button"],input[type="reset"],input[type="submit"]{-webkit-appearance:button;cursor:pointer;}button[disabled],html input[disabled]{cursor:default;}input[type="checkbox"],input[type="radio"]{box-sizing:border-box;padding:0;}input[type="search"]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box;}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none;}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0;}textarea{overflow:auto;vertical-align:top;}table{border-collapse:collapse;border-spacing:0;}
*,
*::after,
*::before {
	box-sizing: border-box;
}

html {
	background: #000000;
}

body {
	font-family: 'Barlow Semi Condensed', Helvetica, Arial, sans-serif;
	text-transform: uppercase;
	font-size: 0.85em;
	letter-spacing: 0.125em;
	font-weight: 700;
	min-height: 100vh;
	color: #3858d8;
	color: var(--color-text);
	background-color: #fff;
	background-image: url("https://thumbs.gfycat.com/HonorableKlutzyBordercollie-size_restricted.gif");
	background-repeat: no-repeat;
	background-size: 1500px 800px;
	background-color: var(--color-bg);
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

/* Color schemes */
.demo-1 {
	--color-text: #ecb985;
	--color-bg: #201f21;
	--color-link: #ecb985;
	--color-link-hover: #000;
	--color-info: #000;
	$bg: #11111b;
	$red: #ff6778;
	$green: #afd33d;
	$blue: #1122ff;
	$text: $green;
	
	@function font($to, $from, $toWidth, $fromWidth) {
		$slope: ($to - $from) / ($toWidth - $fromWidth);
		$base: $from - $slope * $fromWidth;
		@return calc(#{$base} + #{100vw * $slope});
	}
	@mixin dotgrid($dot: #aaa,$dot-background: #000,$dot-size: 1px,$dot-spacing: 22px) {
		background: linear-gradient(90deg, $dot-background ($dot-spacing - $dot-size), transparent 1%) center, linear-gradient($dot-background ($dot-spacing - $dot-size), transparent 1%) center, $dot;
		background-size: $dot-spacing $dot-spacing;
		background-position: center;
	}
	
	:root {
		box-sizing: border-box;
		cursor: default;
	}
	::selection {
		color: $bg;
		background-color: lighten($text, 10%);
	}
	html, body {
		width: 100%;
		height: 100%;
		background-color: $bg;
		color: $text;
		font-size: font(22px, 9px, 1920px, 320px);
	}
	.error-body {
		position: relative;
		width: 100%;
		height: 100%;
		overflow: hidden;
		&:before {
			content: '';
			position: fixed;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			background-color: $text;
			mix-blend-mode: overlay;
			z-index:1;
		}
		&:after {
			content: '';
			position: fixed;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			@include dotgrid($dot: lighten($bg, 100%), $dot-background: $bg);
			opacity: .2;
			z-index:1;
		}
		.background {
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			z-index: 0;
			filter: grayscale(1);
			mix-blend-mode: luminosity;
		}
		.message {
			position: relative;
			width: 100%;
			height: 100%;
			text-align: center;
			z-index:3;
			h1 {
				$faded: rgba($text, .3);
				position: absolute;
				top: 10%;
				left: 0%;
				width: 100%;
				font-size: 10em;
				margin: 0;
				animation: shake 600ms ease-in-out infinite alternate;
				text-shadow: 0 0 .07em $text,
						 -.2em 0 2em $faded,
									.2em 0 2em $faded;
				user-select: none;
				&:before {
					content: attr(t);
					position: absolute;
					left: 50%;
					transform: translate(-50%, .34em);
					height: .1em;
					line-height: .5em;
					width: 100%;
					animation: scan 500ms ease-in-out infinite alternate random(600)+ms,
						glitch-anim 300ms ease-in-out infinite alternate;
					overflow: hidden;
					opacity: .7;
				}
				&:after {
					$n:random(30);
					content: attr(t);
					position: absolute;
					top: -$n+px;
					left: 50%;
					transform: translate(-50%, .34em);
					height: .5em;
					line-height: .1em;
					width: 100%;
					animation: scan 665ms ease-in-out infinite alternate random(600)+ms,
						glitch-anim 300ms ease-in-out infinite alternate;
					overflow: hidden;
					opacity: .8;
				}
			}
			.bottom {
				position: absolute;
				top: 65%;
				left: 0;
				width: 100%;
			}
			p, a {
				font-size: 2em;
				font-family: monospace;
				text-shadow: 0 0 5px $text;
				filter: blur(.8px);
			}
			a {
				$dd: 225ms;
				
				position: relative;
				color: $text;
				text-decoration: none;
				font-weight: 700;
				border: 2px solid $text;
				text-transform: uppercase;
				padding: 5px 30px;
				box-shadow: inset 0 0 0 0 rgba($text, .2);
				transition: 25ms ease-in-out all 0ms;
				overflow: hidden;
				animation: attn 3s ease-in-out infinite;
				&:hover {
					cursor: crosshair;
					box-shadow: inset 0 -2em 0 0 rgba($text, .2);
					transition: 225ms ease-in-out all $dd;
					animation: none;
					&:before,
					&:after {
						transform: translate(-50%, 0) scale(0, 1);
					}
				}
				&:active {
					box-shadow: inset 0 -2em 0 0 rgba($text, .5);
					transition: 225ms ease-in-out all $dd;
				}
				&:before,
				&:after {
					content: '';
					position: absolute;
					left: 50%;
					transform: translate(-50%, 0) scale(1, 1);
					transform-origin: center;
					background-color: $bg;
					width: 90%;
					height: 5px;
					transition: $dd ease-in-out all;
					mix-blend-mode: hard-light;
				}
				&:before {
					top: -4px;
				}
				&:after {
					bottom: -4px;
				}
			}
		}
	}
	
	@keyframes scan {
		$num: random(30);
		$numVal: $num * .01em;
		from , 20%, 100%{
			height: 0;		
			transform: translate(-50%, .44em);
		}
		10%,15% {
			height: 1em;
			line-height: .2em;
			transform: translate(-55%, $numVal);
		}
	}
	@keyframe pulse {
		$faded: rgba($text, .3);
		from {
			text-shadow: 0 0 0 $text,
									 0 0 0 $faded,
									 0 0 0 $faded;
		}
		to {
			text-shadow: 0 0 .07em $text,
						 -.2em 0 2em $faded,
									.2em 0 2em $faded;
		}
	}
	@keyframes attn {
		0%, 100% {
			opacity: 1;
		}
		30%, 35% {
			opacity: .4;
		}
	}
	@keyframes shake {
		0%, 100% {
			transform: translate(-1px, 0);
		}
		10% {
			transform: translate(2px, 1px);
		}
		30% {
			transform: translate(-3px, 2px);
		}
		35% {
			transform: translate(2px, -3px);
			filter: blur(4px);
		}
		45% {
			transform: translate(2px, 2px) skewY(-8deg) scale( .96, 1);
			filter: blur(0);
		}
		50% {
			transform: translate(-3px, 1px);
		}
	}
	@keyframes glitch-anim {
	  $steps: 10;
	  @for $i from 0 through $steps {
		#{percentage($i*(1/$steps))} {
		  clip: rect(random(100)+px, 9999px, random(100)+px, 0);
		}
	  }
	}
}

.demo-2 {
	--color-text: #fff;
	--color-bg: #201f21;
	--color-link: #fff;
	--color-link-hover: #7b7b7b;
	--color-info: #7b7b7b;
	border-left: 4rem solid #181819;
}

/* Fade effect */
.js body {
	opacity: 0;
	transition: opacity 0.3s;
}

.js body.render {
	opacity: 1;
}

/* Page Loader */
.js .loading::before {
	content: '';
	position: fixed;
	z-index: 100000;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background: var(--color-bg);
}

.js .loading::after {
	content: '';
	position: fixed;
	z-index: 100000;
	top: 50%;
	left: 50%;
	width: 60px;
	height: 60px;
	margin: -30px 0 0 -30px;
	pointer-events: none;
	border-radius: 50%;
	opacity: 0.4;
	background: var(--color-link);
	animation: loaderAnim 0.7s linear infinite alternate forwards;
}

@keyframes loaderAnim {
	to {
		opacity: 1;
		transform: scale3d(0.5,0.5,1);
	}
}

a {
	text-decoration: none;
	color: var(--color-link);
	outline: none;
}

a:hover,
a:focus {
	color: var(--color-link-hover);
	outline: none;
}

.hidden {
	position: absolute;
	overflow: hidden;
	width: 0;
	height: 0;
	pointer-events: none;
}

/* Icons */
.icon {
	display: block;
	width: 1.5em;
	height: 1.5em;
	margin: 0 auto;
	fill: currentColor;
}

main {
	position: relative;
	width: 100%;
}

.content {
	position: relative;
	display: flex;
	justify-content: flex-end;
	align-items: center;
	margin: 0 auto;
	min-height: 100vh;
}

.content--fixed {
	position: fixed;
	z-index: 10000;
	top: 0;
	left: 0;
	display: grid;
	align-content: space-between;
	width: 100%;
	max-width: none;
	min-height: 0;
	height: 100vh;
	padding: 1.5em 1.5em 1.5em 1.25em;
	pointer-events: none;
	grid-template-columns: 50% 50%;
	grid-template-rows: auto auto 4em;
	grid-template-areas: 'header demos'
	'... info'
	'github info';
}


}

.content--fixed a {
	pointer-events: auto;
}

/* Header */
.codrops-header {
	position: relative;
	z-index: 100;
	align-self: start;
	grid-area: header;
	justify-self: start;
	-webkit-writing-mode: vertical-lr;
	writing-mode: vertical-lr;
	height: 18rem;
}

.codrops-header__title {
	font-size: 1em;
	font-weight: bold;
	margin: 0;
	padding: 1.75em 0;
	transform: scale(-1);
	align-self: center;
	line-height: 2;
}

.info {
	margin: 0 0 0.25rem 1.25em;
	color: var(--color-info);
	-webkit-writing-mode: vertical-lr;
	writing-mode: vertical-lr;
	grid-area: info;
	align-self: end;
	justify-self: end;
}

.github {
	display: block;
	align-self: end;
	grid-area: github;
	justify-self: start;
	margin: 0.25rem;
}

.demos {
	position: relative;
	display: block;
	justify-self: end;
	align-self: start;
	text-align: center;
	grid-area: demos;
	pointer-events: auto;
	padding: 0.5rem 0 0 0;
}

.demo:not(:last-child) {
	margin: 0 1rem 0 0;
}

.demo span {
	white-space: nowrap;
}

a.demo--current {
	pointer-events: none;
	color: var(--color-link-hover);
}

/* Top Navigation Style */
.codrops-links {
	position: relative;
	display: flex;
	justify-content: center;
	text-align: center;
	white-space: nowrap;
	float: left;
	width: 2rem;
}

.codrops-icon {
	display: inline-block;
	margin: 0.15em;
	padding: 0.25em;
}

@media screen and (max-width: 65em) {
	body {
		border: 0 !important;
	}
	.content {
		flex-direction: column;
		height: auto;
		min-height: 0;
		padding-bottom: 10em;
	}
	.content--fixed {
		position: relative;
		z-index: 1000;
		display: block;
		padding: 0.85em;
	}
	.codrops-header {
		flex-direction: column;
		align-items: center;
		-webkit-writing-mode: initial;
		writing-mode: initial;
		height: auto;
	}
	.codrops-header__title {
		font-weight: bold;
		padding-bottom: 0.25em;
		text-align: center;
		transform: none;
	}
	.info {
		margin: 1rem 0;
		-webkit-writing-mode: initial;
		writing-mode: initial;
		text-align: center;
	}
	.github {
		display: none;
	}
	.codrops-links {
		margin: 0;
		float: none;
		width: auto;
	}
	
	}
}
